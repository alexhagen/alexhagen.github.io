<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Hagen</title>
    <description>Welcome to my portfolio. I am currently a Ph.D. seeking student at Purdue University in Nuclear Engineering.  This portfolio shows some designs, publications, and open source codes that I've created. Feel free to email me if you have any ideas, questions, or requests.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 16 Jul 2017 17:38:19 -0400</pubDate>
    <lastBuildDate>Sun, 16 Jul 2017 17:38:19 -0400</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>A Plan for Making Projects</title>
        <description>&lt;p&gt;One thing I’ve noticed about myself is that I feel better when I &lt;em&gt;make&lt;/em&gt; things.
Whether it’s building something small at home, designing and having something
at work fabricated, or even if it’s organizing and creating the branding for a
team I play on, or a group I’m involved with, I like the process of design and
creation.  In that vein, I’ve been passively interested in woodworking for
quite a while - in the watch-a-million-videos-on-youtube kind of way.&lt;/p&gt;

&lt;p&gt;Unfortunately, woodworking requires a lot of equipment to do correctly. And
doing it incorrectly seems like you just end up making a lot of garbage.  So,
to be budget friendly, I’ve decided on a long term scheme for how to develop a
fully featured shop.  This may all be moot, though, because my move in a couple
months may have me move to somewhere that has fully featured makerspaces that I
can just get a monthly subscription to.&lt;/p&gt;

&lt;p&gt;My plan basically revolves around carefully planning projects, and then
purchasing the equipment required for each project, in order of least to most
equipment.  Then, to replicate each project multiple times, and sell it on
Etsy.  I plan to sell as many on Etsy as is needed to pay for the equipment
that I bought for the project.  Hopefully they sell!&lt;/p&gt;

&lt;p&gt;Right now I have a couple projects that I want to do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A console/mount station for all-of-the-electronics including enough power to charge everything and a usb-to-wifi hub, even if I have to write the drivers myself.
    &lt;ul&gt;
      &lt;li&gt;Tools required: I think just a plunge router.  Maybe a belt sander.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A step stool for our kitchen.
    &lt;ul&gt;
      &lt;li&gt;Tools required: I think a table saw.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A dining room table for our kitchen.
    &lt;ul&gt;
      &lt;li&gt;Tools required: Jointer, Planer, maybe a biscuit joiner.  And definitely a belt sander if I don’t have one from before.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A bed.
    &lt;ul&gt;
      &lt;li&gt;I think I’ll have everything from before.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A mounted projector box for our patio.
    &lt;ul&gt;
      &lt;li&gt;I think I’ll have everything from before.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my current &lt;em&gt;modus operandi&lt;/em&gt; is to design everything in CAD before I make
these.  I usually use Solidworks, but I think for the whole legal aspect (and
the use-on-something-other-than-windows aspect) I should learn Fusion-360 for
my first project and use it from there.  I’ll update as I go along!&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Jul 2017 18:34:00 -0400</pubDate>
        <link>/personal/misc/woodworking</link>
        <guid isPermaLink="true">/personal/misc/woodworking</guid>
        
        
        <category>personal</category>
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>Quick Script: Wordpress to Markdown</title>
        <description>&lt;p&gt;Recently I had the occasion to convert a bunch of wordpress posts over to a
Jekyll blog, including a bunch of pictures that I sent out for third party
hosting.  I wrote a quick/simple script and I’m embedding it via
&lt;code&gt;github-gists&lt;/code&gt; below.  It downloads a page via http, then splits it into the
&lt;code&gt;content&lt;/code&gt; and then an array of pictures.  Note that you’d have to change this
if you had pictures interspersed throughout your post, instead of all at the
end.  I don’t intend this to be a catch-all or anything, but hopefully it’s
useful to someone. Requires &lt;code&gt;BeautifulSoup&lt;/code&gt; be installed and
&lt;code&gt;imgur-uploader&lt;/code&gt; be installed and working on the path.  It only
converts/posts once per hour to avoid &lt;code&gt;imgur&lt;/code&gt;’s upload limits.  I hope this
helps someone!&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/alexhagen/2ca6dcddfa7c3858ec78829b21770194.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Sat, 01 Jul 2017 08:05:00 -0400</pubDate>
        <link>/blog/projects/wordpress-to-markdown</link>
        <guid isPermaLink="true">/blog/projects/wordpress-to-markdown</guid>
        
        
        <category>blog</category>
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Life List</title>
        <description>&lt;p&gt;&lt;em&gt;I intend this to be a living document for my own accountability and benefit.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;iceland&quot; /&gt;
  &lt;label for=&quot;iceland&quot;&gt;Travel to Iceland&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;volcano&quot; /&gt;
  &lt;label for=&quot;volcano&quot;&gt;Climb a volcano&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;porcupine&quot; /&gt;
  &lt;label for=&quot;porcupine&quot;&gt;Travel to the Porcupine Mountains&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;thor&quot; /&gt;
  &lt;label for=&quot;thor&quot;&gt;See Thor's Peak&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;mini&quot; checked=&quot;&quot; /&gt;
  &lt;label for=&quot;mini&quot;&gt;Run a mini-marathon&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;marathon&quot; /&gt;
  &lt;label for=&quot;marathon&quot;&gt;Run a marathon&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;fiftyk&quot; /&gt;
  &lt;label for=&quot;fiftyk&quot;&gt;Run a 50k&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;furniture&quot; /&gt;
  &lt;label for=&quot;furniture&quot;&gt;Build a majority of our furniture&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;soccer&quot; /&gt;
  &lt;label for=&quot;soccer&quot;&gt;Play soccer until I'm 38&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;fourteener&quot; /&gt;
  &lt;label for=&quot;fourteener&quot;&gt;Climb a 14er&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;northernlights&quot; /&gt;
  &lt;label for=&quot;northernlights&quot;&gt;See the Northern Lights&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;states&quot; /&gt;
  &lt;label for=&quot;states&quot;&gt;Live somewhere outside of the United States&lt;/label&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;tubeamp&quot; /&gt;
  &lt;label for=&quot;tubeamp&quot;&gt;Build a tube amplifier&lt;/label&gt;
&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Jun 2017 11:00:00 -0400</pubDate>
        <link>/personal/misc/life_list</link>
        <guid isPermaLink="true">/personal/misc/life_list</guid>
        
        
        <category>personal</category>
        
        <category>misc</category>
        
      </item>
    
      <item>
        <title>Researcher's Tip: Use Makefiles</title>
        <description>&lt;p&gt;As part of the requirements for my the specialization in &lt;em&gt;Computational Science
in Engineering&lt;/em&gt;, I had to take a class called “Computer Science for Engineers”
from Purdue’s School of Computer science.  I did not like it. It was too
theoretically based, and for the most part did not support “Getting Things Done
with Computers”, the class’s subtitle.  However, one topic of the class’s
endless minutiae has become an integral part of my toolbox as an engineer. That
is the use of &lt;code&gt;Makefile&lt;/code&gt;s.&lt;/p&gt;

&lt;p&gt;The concept of a &lt;code&gt;Makefile&lt;/code&gt; is simple.  It’s a script.  Nothing more and
nothing less. You simply type &lt;code&gt;make&lt;/code&gt; into the folder containing the
&lt;code&gt;Makefile&lt;/code&gt;, and it does something. Anything.  You can add “targets”, which are
just command-line arguments, and it will do other things.  But, you always type
&lt;code&gt;make&lt;/code&gt;.  And that, while seemingly small, is a huge benefit.&lt;/p&gt;

&lt;p&gt;The idea of having one command that works everywhere is an organic one - think
the keyhole for a locked door or the big red button on a piece of machining
equipment.  It’s been developed independently with innumerable things.  For
example: my colleagues often have to run a script to start their nuclear
transport simulations.  Being Windows guys, they wrote a batch file that they
just copy everywhere.  It’s called &lt;code&gt;gobaby.bat&lt;/code&gt;, always. The ability to
revisit your own work from years ago, or to drop into someone else’s work and
just type &lt;code&gt;gobaby&lt;/code&gt;, or in our case, &lt;code&gt;make&lt;/code&gt; is indispensable.&lt;/p&gt;

&lt;p&gt;Now that I’ve waxed philosophical about &lt;code&gt;Makefiles&lt;/code&gt;, I’ll actually back it up
with some concrete situations and examples that you can use in your own
research.&lt;/p&gt;

&lt;h2 id=&quot;makefiles-for-data-analysis&quot;&gt;Makefiles for Data Analysis&lt;/h2&gt;

&lt;p&gt;This use of a &lt;code&gt;Makefile&lt;/code&gt; is obvious, so I won’t belabor the point here. But
one of the most frustrating things I see when working with students, or even
some of my colleagues, is repeatedly making the same edits to different data
files. So often I see researchers download their datafile from whatever
instrument they’re using, converting it to &lt;code&gt;.csv&lt;/code&gt;, opening it in Excel,
summing the columns, averaging the values, etc.  And they do this &lt;strong&gt;every time
they get a new data file&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I’m not arguing against Excel here, although I could, I’m just pointing out that&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;This is tedious. And nobody likes tedious.&lt;/li&gt;
  &lt;li&gt;A researcher’s time is better spent doing hard mental work (see Cal Newport’s
great &lt;a href=&quot;http://calnewport.com/blog/&quot;&gt;Study Hacks blog&lt;/a&gt;), not menial tasks.&lt;/li&gt;
  &lt;li&gt;It’s easier to mess up your data analysis if it’s not automated.  What if
you forgot to convert one file’s units? How would that look against all your
other data? And most importantly, would you notice, or come up with
conclusions based on the skewed data?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, instead of doing this, I propose (and this is not a new, or even rare
proposal) taking the time to write a data analysis script, or macro. And then
implementing it in a &lt;code&gt;Makefile&lt;/code&gt;.  Let’s imagine we have an instrument that
outputs a file named &lt;code&gt;datafile.dat&lt;/code&gt;, and that we need to first read in that
data, compute a running average over 5 minutes, and then plot the data.
Additionally, we’d like to look at the plot once it’s done.  We’d need to write
at least one script to do this, which for now we’ll call &lt;code&gt;analyze.py&lt;/code&gt;. An
example makefile would then be:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-make&quot;&gt;
all: clean analyze

analyze: analyze.py datafile.dat
  cp datafile.dat datafile_copy.dat
  python analyze.py output=graph.pdf
  open graph.pdf

clean: FORCE
  rm -f datafile_copy.dat
  rm -f graph.pdf

FORCE:


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We’ve defined four targets.  The first, &lt;code&gt;all&lt;/code&gt;, defines the behavior that
occurs when you type &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;make all&lt;/code&gt;.  Basically, we’re just ordering
whether we want to clean first and analyze second.  The second target,
&lt;code&gt;analyze&lt;/code&gt; requires files &lt;code&gt;analyze.py&lt;/code&gt; and &lt;code&gt;datafile.dat&lt;/code&gt;.  If you type
&lt;code&gt;make analyze&lt;/code&gt;, and neither of those files have changed since the last time,
the target will not run (why should it?).  The third target, &lt;code&gt;clean&lt;/code&gt;, runs on
target &lt;code&gt;FORCE&lt;/code&gt;, which means it will always run. &lt;code&gt;make clean&lt;/code&gt; removes our
copy of the data file, and also removes the generated graph.  Finally, as
alluded to, we’ve defined &lt;code&gt;FORCE&lt;/code&gt; as a semantic way to make sure certain
targets always run.  Now that I’ve described the makefile, do you see a way that
this &lt;code&gt;Makefile&lt;/code&gt; won’t work?&lt;/p&gt;

&lt;p&gt;If one calls &lt;code&gt;make all&lt;/code&gt;, the files in the directory will be &lt;code&gt;datafile.dat&lt;/code&gt;,
&lt;code&gt;datafile_copy.dat&lt;/code&gt;, &lt;code&gt;analyze.py&lt;/code&gt;, &lt;code&gt;Makefile&lt;/code&gt;, and &lt;code&gt;graph.pdf&lt;/code&gt;.  If one
then calls &lt;code&gt;make clean&lt;/code&gt;, that would remove &lt;code&gt;datafile_copy.dat&lt;/code&gt; and
&lt;code&gt;graph.pdf&lt;/code&gt;.  Then, if you wanted to look at &lt;code&gt;graph.pdf&lt;/code&gt;, it’s gone.  So,
you’d call &lt;code&gt;make analyze&lt;/code&gt;, but neither of the needed files have changed, so
&lt;code&gt;make analyze&lt;/code&gt; wouldn’t run.  We can solve this problem by either not removing
&lt;code&gt;graph.pdf&lt;/code&gt; on clean, or other, more complex ways (creating two separate
&lt;code&gt;clean&lt;/code&gt; and &lt;code&gt;clean-after&lt;/code&gt; targets, for example).&lt;/p&gt;

&lt;p&gt;This was just a general and esoteric example of how one might automate the
analysis of data using &lt;code&gt;Makefiles&lt;/code&gt;.  Below, we’ll get into more specific ways,
and ways that I find more useful.&lt;/p&gt;

&lt;h2 id=&quot;makefiles-for-data-provenance&quot;&gt;Makefiles for Data Provenance&lt;/h2&gt;

&lt;p&gt;Data provenance, or the tracking of data from its raw form through to when it is
analyzed, is extremely important for ethical scientific research.  It’s akin to
the chain of custody for detectives when working with evidence.  While it’s
remarkably easy when keeping a lab notebook (basically the only rule is blot
things out or erase them, and sign your corrections), computer files make this
quite difficult. It’s easy to just delete a line in a file and change the data
drastically, and untraceably.&lt;/p&gt;

&lt;p&gt;While I really advocate using &lt;code&gt;git&lt;/code&gt; for data provenance, using &lt;code&gt;Makefile&lt;/code&gt;s
is also possible, and easy.  In general, you should leave your data in raw form,
but have an intermediate file that is your &lt;em&gt;edited&lt;/em&gt; data.  You can use a
&lt;code&gt;Makefile&lt;/code&gt; and the GNU commands such as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
sed '10s/.*/new data here/' raw.dat &amp;gt; edited.dat

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to replace line 10 with the string ‘new data here’.  That &lt;code&gt;Makefile&lt;/code&gt; not only
keeps your raw data in its original form, but reads as a script for the changes
you made.  With liberal comments, this is almost as traceable as a paper
notebook.&lt;/p&gt;

&lt;h2 id=&quot;makefiles-for-publication&quot;&gt;Makefiles for Publication&lt;/h2&gt;

&lt;p&gt;Writing publication ready documents is a complex and difficult task.  Most
authors use Microsoft Word, make bitmap figures, and let the editors of the
journals deal with it.  This is definitely a viable way to publish (remember
what I said about researchers not spending time on menial tasks?), but I have
seen several papers that lost their usefulness because of bad figures.  For
example, I read an article last week describing a way to simply measure the
surface tension of fluids under various pressures, but the figures had, I can
only assume, printed out on paper and scanned, then printed and scanned again,
and then scanned and inserted into the paper.  In effect, I could not see their
apparatus.  It looked more like &lt;em&gt;The View from the Window at De Gras&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/images/view_from_window_at_de_gras.jpg&quot; style=&quot;width: 250px;&quot; /&gt;
    &lt;figcaption&gt;&lt;i&gt;View from the Window at De Gras&lt;/i&gt; - the first photograph - an image that's indistinguishable from many published figures because of their low image quality&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The solution to this is, in large part, to use modern and appropriate tools.
Charts and figures should be vector when possible, and should probably be made
with something powerful like MATLAB, Python, R, OrigenPlot, etc.  However, when
making figures from code, the constant code, run, import, resize, change, code,
run, importing that you have to do can be a real hassle.  That’s where
&lt;code&gt;Makefile&lt;/code&gt;s come in.  Here’s a &lt;code&gt;Makefile&lt;/code&gt; I propose for figure creation.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-make&quot;&gt;all: figures tables

figures: figure1 figure2 figure3

figure1: figure1.py img/figure1.pdf
    python figure1.py

figure2: figure2.py img/figure2.pdf
    python figure2.py

figure3: figure3.py img/figure3.pdf
    python figure3.py

bitmaps: figures
    convert img/figure1.pdf -resize=800x600^ img/figure1.png
    corvert img/figure2.pdf -resize=800x600^ img/figure2.png

clean:
    rm img/*.pgf
    rm img/*.png

FORCE:

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This &lt;code&gt;Makefile&lt;/code&gt; provides a couple things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the ability to type &lt;code&gt;make&lt;/code&gt; and have all your pdf figures in the &lt;code&gt;img/&lt;/code&gt;
 directory.&lt;/li&gt;
  &lt;li&gt;the ability to clean the &lt;code&gt;img/&lt;/code&gt; directory with just &lt;code&gt;make clean&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;a quick command to convert this to bitmaps, incase you need to email figures
or put them in a Word file&lt;/li&gt;
  &lt;li&gt;only rebuilding of the figures that are changed, so you can just type
&lt;code&gt;make&lt;/code&gt; willy nilly and not waste a single CPU clock cycle.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;further-makefiles&quot;&gt;Further Makefiles&lt;/h2&gt;

&lt;p&gt;Although the examples are a little simplistic, I hope I’ve convinced you to at
least consider &lt;code&gt;Makefile&lt;/code&gt;s for your needs.  I’ll try to come back to this page
and update the &lt;code&gt;Makefile&lt;/code&gt;s to be more descriptive or more in depth, and maybe
I’ll even do a full “sandbox” playing with &lt;code&gt;Makefile&lt;/code&gt;s, &lt;code&gt;git&lt;/code&gt;, and my
&lt;a href=&quot;http://alexhagen.github.com/pyg&quot;&gt;&lt;code&gt;pyg&lt;/code&gt;&lt;/a&gt; graphing library - which are my big
tools for research.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Mar 2017 10:00:00 -0500</pubDate>
        <link>/blog/projects/tip-use-makefiles</link>
        <guid isPermaLink="true">/blog/projects/tip-use-makefiles</guid>
        
        
        <category>blog</category>
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>ANS Winter Meeting 2016 Awards</title>
        <description>&lt;p&gt;In late December, I received in the mail the American Nuclear Society’s Young
Members’ Group Best Paper award for my presentation and accompanying paper at
the 2016 ANS Winter Conference.  Professor Taleyarkhan, the corresponding
author, also received word that the paper had won the overall conference’s Best
Paper Award.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/ne_news_screencap_ans_winter_2016.png&quot; /&gt;
    &lt;figcaption&gt;
      Recognition of our award from Purdue's School of Nuclear Engineering
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It was an honor to receive, and it’s garnered some attention from Purdue’s
School of Engineering.  It’s always nice to get that kind of recognition.
Because I can’t publish the paper or the presentation here (for copyright and
intellectual property reasons), I’ve written a quick summary of the paper and
included some of the most salient figures below.&lt;/p&gt;

&lt;h2 id=&quot;threshold-energy-based-active-special-nuclear-material-interrogation&quot;&gt;Threshold Energy Based Active Special Nuclear Material Interrogation&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Alex Hagen, Brian Archambault, Ph.D., and Rusi Taleyarkhan, Ph.D.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Counter terrorism is an important and ever-present concern of our times.  CBRN
defense is a common acronym to describe the wide ranging terrorism concerns,
standing for Chemical, Biological, Radiological, and Nuclear.  Particularly, we
are concerned with Nuclear defense - the ability to detect and interdict those
materials that can create nuclear weapons if they are being smuggled.  These
materials (weapons grade plutonium and highly enriched uranium) are called
Special Nuclear Materials - or SNM.  If you’re interested in a more in depth
description of this motivation, I’ll put up a post soon.&lt;/p&gt;

&lt;p&gt;Currently, we know that there is a weakness in our detection of SNM.  The
Congress of the United States’ Budget Office sums it up this way:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The passive radiation detectors outside shipping containers can usually
detect emissions from materials for radiological weapons but are less effective
at detecting emissions from nuclear weapons and the fissile materials used to
make them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We presented a way to remedy this.  Our detectors, Metastable Fluid Detectors,
are more efficient than other neutron detectors, and have higher signal to
noise ratios than conventional neutron detectors because they are inherently
blind to $\gamma$ particles.  I’ll post a more in depth description of our
detectors soon.&lt;/p&gt;

&lt;p&gt;The efficiency of our detector makes it easily detect smuggled WGP.  However,
highly enriched uranium is much “quieter”, it emits less neutrons from
spontaneous fission.  To remedy this, we propose a method using &lt;strong&gt;active
interrogation&lt;/strong&gt;.  We direct a $2.45 MeV$ beam of neutrons onto the cargo, and
the fissile material (the HEU) will generate neutrons from induced fission.
Then, setting a lower level discriminator, we can detect only those fission
neutrons with energies above $2.45 MeV$, thereby not detecting any of the
interrogating neutrons.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/fission_spectrum.png&quot; /&gt;
    &lt;figcaption&gt;
      Ratio of fission spectrum above the interrogation spectrum.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;With this methodology, which we call &lt;strong&gt;Threshold Energy Neutron Analysis&lt;/strong&gt;, we
were able to get ratios between the fission neutrons and interrogation neutrons
of over $1000 \times$.  This is much much larger than that achievable with
conventional neutron detectors, which we tested to ratios of only $12 \times$,
and the literature shows similar, or worse results.  In all, this is an
interesting and useful way to interrogate cargo for special nuclear materials.&lt;/p&gt;

&lt;figure&gt;
    &lt;img class=&quot;onecol&quot; src=&quot;/assets/img/dd_fission_ratios.png&quot; /&gt;
    &lt;figcaption&gt;
      Efficiency of fission and interrogating neutrons in a CTMFD
    &lt;/figcaption&gt;
&lt;/figure&gt;
</description>
        <pubDate>Wed, 04 Jan 2017 10:00:00 -0500</pubDate>
        <link>/blog/work/ans_2016_ymg_award</link>
        <guid isPermaLink="true">/blog/work/ans_2016_ymg_award</guid>
        
        
        <category>blog</category>
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>IEEE Sensors 2016 First Place Demo Award</title>
        <description>&lt;p&gt;In early November, we received the 1st Place Demo award from the IEEE Sensors
conference, which we had presented at just several weeks before.  It’s great to
get recognition, and my contribution to this award was sizeable.  I had
designed and prototyped the DC powered CTMFD unit that we took down to the
conference, and wrote the Android App used to control it.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/ieee_sensors_2016_demo_award.png&quot; /&gt;
    &lt;figcaption&gt;
      Announcement of our award on the IEEE Sensors website
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Obviously, we are proud of the recognition, and usually I like to write up what
we actually presented on.  However, at this conference, the conference
generated a video primer of our demonstration, and I’ve embedded that below.  I
think it shows more fluently what we like to show than simply writing it up.&lt;/p&gt;

&lt;h2 id=&quot;femto--to-macro--scale-interdisciplinary-sensing-with-tensioned-metastable-fluid-detectors&quot;&gt;Femto- to Macro- Scale Interdisciplinary Sensing with Tensioned Metastable Fluid Detectors&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Rusi Taleyarkhan, Ph.D., Alex Hagen, Brian Archambault, Ph.D., and Anthony Sansone&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/NH-nLp48PKc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
    &lt;figcaption&gt;
      Generated video of TMFD demos for general sensing
    &lt;/figcaption&gt;
&lt;/figure&gt;
</description>
        <pubDate>Mon, 21 Nov 2016 10:00:00 -0500</pubDate>
        <link>/blog/work/ieee_sensors_2016_demo_award</link>
        <guid isPermaLink="true">/blog/work/ieee_sensors_2016_demo_award</guid>
        
        
        <category>blog</category>
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Threshold Rejection Mode Active Interrogation of SNMs Using Continuous Beam DD Neutrons with Centrifugal and Acoustic Tensioned Metastable Fluid Detectors</title>
        <description>&lt;p&gt;Brian, Professor Taleyarkhan, and I - in collaboration with our colleagues from
Kyoto and Pony Industries - show the proof of concept for &lt;strong&gt;Threshold Energy
Neutron Analysis&lt;/strong&gt; using our tensioned mestable fluid detectors.  We also
discuss our minimum detectable quantity of special nuclear material with this
methodology, and the number is significantly smaller (better) than the current
state of the art.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Nov 2016 07:00:00 -0500</pubDate>
        <link>/publications/threshold-rejection-mode-active-interrogation</link>
        <guid isPermaLink="true">/publications/threshold-rejection-mode-active-interrogation</guid>
        
        <category>authored</category>
        
        
        <category>publications</category>
        
      </item>
    
      <item>
        <title>PyG</title>
        <description>
</description>
        <pubDate>Sun, 09 Nov 2014 10:00:00 -0500</pubDate>
        <link>/code/pyg</link>
        <guid isPermaLink="true">/code/pyg</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Multiphysics Modeling in Optimization of Acoustically Tensioned Metastable Fluid Neutron Detectors</title>
        <description>&lt;p&gt;My Master’s Thesis was published in August of 2014 after defending the thesis to a committee of &lt;em&gt;Purdue Nuclear Engineering&lt;/em&gt; and &lt;em&gt;Purdue Health Physics&lt;/em&gt; faculty members in May of 2014.  The thesis includes business confidential material and will not be published until 2016.  I will post the full text at that time.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Aug 2014 08:00:00 -0400</pubDate>
        <link>/publications/multiphysics-modeling-in-optimization</link>
        <guid isPermaLink="true">/publications/multiphysics-modeling-in-optimization</guid>
        
        <category>authored</category>
        
        
        <category>publications</category>
        
      </item>
    
      <item>
        <title>Characterization and Optimization of a Tensioned Metastable Fluid Nuclear Particle Sensor Using Laser Based Profilimetry</title>
        <description>&lt;p&gt;I was invited to give a talk and poster at the 22nd &lt;em&gt;International Conference on Nuclear Engineering&lt;/em&gt; (ICONE) in Prague. The poster that accompanied this talk and paper was selected as a Winner in the student competition.  I have submitted a revised version of this paper for publication in a new ASME journal, &lt;em&gt;Nuclear Engineering and Radiation Science&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jul 2014 08:00:00 -0400</pubDate>
        <link>/publications/characterization-and-optimization-of</link>
        <guid isPermaLink="true">/publications/characterization-and-optimization-of</guid>
        
        <category>authored</category>
        
        
        <category>publications</category>
        
      </item>
    
  </channel>
</rss>
