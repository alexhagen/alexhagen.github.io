#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{pgf}
\usepackage{lastpage}
\usepackage{tikz}
\usetikzlibrary{shapes,arrows,calc,positioning}
\usepackage{minted}
\end_preamble
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize custom
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\paperwidth 17in
\paperheight 8.5in
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth -1
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

% Define block styles 
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{decision} = [diamond, draw,      
\end_layout

\begin_layout Plain Layout

     text width=8em, minimum width=15em,text badly centered, minimum height=15em
,node distance=3cm, inner sep=0pt] 
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{block} = [rectangle, draw,  node distance=6em,    
\end_layout

\begin_layout Plain Layout

    minimum width=15em, text width=12em, text centered, rounded corners,
 minimum height=22em] 
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{line} = [draw, -latex'] 
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{cloud} = [draw, ellipse, node distance=3cm,     
\end_layout

\begin_layout Plain Layout

    minimum height=2em]
\end_layout

\begin_layout Plain Layout


\backslash
tikzset{
\end_layout

\begin_layout Plain Layout

    print/.style={ % requires library shapes.symbols         
\end_layout

\begin_layout Plain Layout

        draw,
\end_layout

\begin_layout Plain Layout

        tape,
\end_layout

\begin_layout Plain Layout

        tape bend top=none,
\end_layout

\begin_layout Plain Layout

        minimum height=15em,
\end_layout

\begin_layout Plain Layout

        minimum width=15em,
\end_layout

\begin_layout Plain Layout

        text width=10em
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[node distance = 2cm, auto]     
\end_layout

\begin_layout Plain Layout

    % Place nodes
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block] (init) {start};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, right=2em of init] (two) {
\end_layout

\begin_layout Plain Layout

        
\backslash
begin{minted}[mathescape,
\end_layout

\begin_layout Plain Layout

        linenos,numbersep=2pt,frame=lines,framesep=2mm]{python}   
\end_layout

\begin_layout Plain Layout

import numpy as np  
\end_layout

\begin_layout Plain Layout

import pyg as ahp
\end_layout

\begin_layout Plain Layout

import pym as ahm
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# material appli-
\end_layout

\begin_layout Plain Layout

# cation class
\end_layout

\begin_layout Plain Layout

class matl(object):
\end_layout

\begin_layout Plain Layout

  N_a = 6.022E23;
\end_layout

\begin_layout Plain Layout

  def __init__(self):
\end_layout

\begin_layout Plain Layout

    n_dens = 
\backslash

\end_layout

\begin_layout Plain Layout

            rho*N_a/M
\end_layout

\begin_layout Plain Layout

  def apply(self,
\backslash

\end_layout

\begin_layout Plain Layout

            region):
\end_layout

\begin_layout Plain Layout

    # apply to geo
\end_layout

\begin_layout Plain Layout

    # region
\end_layout

\begin_layout Plain Layout


\backslash
end{minted}
\end_layout

\begin_layout Plain Layout

    };
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, right=2em of two] (three) {
\end_layout

\begin_layout Plain Layout


\backslash
begin{multline*}
\end_layout

\begin_layout Plain Layout

		D
\backslash
left(E
\backslash
right)
\backslash
nabla^{2}
\backslash
phi
\backslash
left(
\backslash
vec{r},E
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		-
\backslash
Sigma_{a}
\backslash
left(E
\backslash
right)
\backslash
phi
\backslash
left(
\backslash
vec{r},E
\backslash
right)+s
\backslash
left(
\backslash
vec{r},E
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		=
\backslash
frac{1}{v
\backslash
left(E
\backslash
right)}
\backslash
frac{
\backslash
partial
\backslash
phi
\backslash
left(
\backslash
vec{r},E
\backslash
right)}{
\backslash
partial t}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*}
\end_layout

\begin_layout Plain Layout

			
\backslash
nabla^{2}=
\backslash
frac{
\backslash
partial^{2}}{
\backslash
partial x^{2}}+
\backslash
frac{
\backslash
partial^{2}}{
\backslash
partial y^{2}}+
\backslash
frac{
\backslash
partial^{2}}{
\backslash
partial z^{2}}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*}
\end_layout

\begin_layout Plain Layout

			
\backslash
nabla^{2}=
\backslash
frac{1}{r}
\backslash
frac{
\backslash
partial}{
\backslash
partial r}r
\backslash
frac{
\backslash
partial}{
\backslash
partial r}+
\backslash
frac{1}{r^{2}}
\backslash
frac{
\backslash
partial^{2}}{
\backslash
partial 
\backslash
theta^{2}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			+
\backslash
frac{
\backslash
partial^{2}}{
\backslash
partial z^{2}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, right=2em of three] (four) {
\end_layout

\begin_layout Plain Layout

		Calculate cross secitons:
\end_layout

\begin_layout Plain Layout

        
\backslash
begin{minted}[mathescape,
\end_layout

\begin_layout Plain Layout

        linenos,numbersep=2pt,frame=lines,framesep=2mm]{python}   
\end_layout

\begin_layout Plain Layout

# cross-section
\end_layout

\begin_layout Plain Layout

# calculation
\end_layout

\begin_layout Plain Layout

class xs(object):
\end_layout

\begin_layout Plain Layout

  def __init__(self):
\end_layout

\begin_layout Plain Layout

    # get za of all
\end_layout

\begin_layout Plain Layout

    # materials
\end_layout

\begin_layout Plain Layout

    for matl in matls:
\end_layout

\begin_layout Plain Layout

      za = matl.za;
\end_layout

\begin_layout Plain Layout

      xs = get_endf(za)
\end_layout

\begin_layout Plain Layout

      sigma_s = xs[1,:]
\end_layout

\begin_layout Plain Layout

      sigma_a = xs[2,:]
\end_layout

\begin_layout Plain Layout

      sigma_f = xs[3,:]
\end_layout

\begin_layout Plain Layout


\backslash
end{minted}
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, right=2em of four] (five) {Generate banded matrices:
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*} 
\end_layout

\begin_layout Plain Layout

		A=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
left[
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{array}{ccccc} 
\end_layout

\begin_layout Plain Layout

		1 & -2 & 0 & 0 & 4
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		-2 & 1 & -2 & 0 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		0 & -2 & 1 & -2 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		0 & 0 & -2 & 1 & -2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		4 & 0 & 0 & -2 & 1 
\end_layout

\begin_layout Plain Layout

		
\backslash
end{array}
\backslash
right]
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*} 
\end_layout

\begin_layout Plain Layout

		
\backslash
vec{b}=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
left[
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{array}{ccccc}
\end_layout

\begin_layout Plain Layout

		s_{1} & s_{2} & s_{3} & s_{4} & s_{4}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{array}
\end_layout

\begin_layout Plain Layout

		
\backslash
right]^{T}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, right=2em of five] (six) {Invert matrix in place:
\end_layout

\begin_layout Plain Layout

        
\backslash
begin{minted}[mathescape,
\end_layout

\begin_layout Plain Layout

        linenos,numbersep=2pt,frame=lines,framesep=2mm]{python}   
\end_layout

\begin_layout Plain Layout

# matrix inversion
\end_layout

\begin_layout Plain Layout

fct = 
\backslash

\end_layout

\begin_layout Plain Layout

  fastCopyAndTranspose
\end_layout

\begin_layout Plain Layout

def inv():
\end_layout

\begin_layout Plain Layout

  m, n = a.shape 
\end_layout

\begin_layout Plain Layout

  at = fct(a) 
\end_layout

\begin_layout Plain Layout

  ipiv = zeros(m, intc) 
\end_layout

\begin_layout Plain Layout

  info = dgetrf(m, n, at, 
\backslash

\end_layout

\begin_layout Plain Layout

    m, ipiv, 0)[info] 
\end_layout

\begin_layout Plain Layout

  lu = fct(at) 
\end_layout

\begin_layout Plain Layout

  p = list(range(m)) 
\end_layout

\begin_layout Plain Layout

  for k in range(m-1): 
\end_layout

\begin_layout Plain Layout

    ell = ipiv[k] - 1 p[k], 
\end_layout

\begin_layout Plain Layout

    p[ell] = p[ell], p[k]
\end_layout

\begin_layout Plain Layout


\backslash
end{minted}
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, below=2em of six] (seven) {Solve equations by gaussian elimination:
\end_layout

\begin_layout Plain Layout

		$$A 
\backslash
vec{
\backslash
phi}=
\backslash
vec{b}$$
\end_layout

\begin_layout Plain Layout

		$$
\backslash
left[
\backslash
begin{array}{c} 
\backslash
phi_{1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
phi_{2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

		
\backslash
phi_{n}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{array}
\backslash
right]=
\backslash
left[A
\backslash
right]^{-1}
\backslash
vec{b}$$
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [block, left=2em of seven] (eight) {Calculate the total and spacewise
 residual:
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*}
\end_layout

\begin_layout Plain Layout

			R_n=
\backslash
phi_{n,i}
\backslash
left( 
\backslash
vec{r},E 
\backslash
right) - 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			
\backslash
phi_{n,i-1}
\backslash
left( 
\backslash
vec{r},E 
\backslash
right)
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{multline*}
\end_layout

\begin_layout Plain Layout

			R=
\backslash
sum_{k=1}^{n}
\backslash
phi_{k,i}
\backslash
left( 
\backslash
vec{r},E 
\backslash
right) - 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			
\backslash
phi_{k,i-1}
\backslash
left( 
\backslash
vec{r},E 
\backslash
right)
\end_layout

\begin_layout Plain Layout

		
\backslash
end{multline*}	
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [decision, left=2em of eight] (nine) {Is the residual small enough?
\end_layout

\begin_layout Plain Layout

		$$R 
\backslash
leq 
\backslash
varepsilon$$	
\end_layout

\begin_layout Plain Layout

	};
\end_layout

\begin_layout Plain Layout

    
\backslash
node [print, left=2em of nine] (ten) {Output to visualization
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[y=0.80pt, x=0.8pt,yscale=-1, inner sep=0pt, outer sep=0pt]
 
\backslash
begin{scope}[shift={(0,-927.36218)}]   
\backslash
begin{scope}[cm={{0.62189,0.0,0.0,0.62189,(62.0,990.36218)}}]       
\backslash
path[cm={{0.9992,0.04008,-0.04008,0.9992,(0.0,0.0)}},draw=black,line         width=0.80
0pt] (0.0000,100.0000) ..
 controls (-3.1564,100.0000) and         (-5.7151,55.2285) ..
 (-5.7151,0.0000) ..
 controls (-5.7151,-55.2285) and         (-3.1564,-100.0000) ..
 (-0.0000,-100.0000) ..
 controls (-0.0000,-100.0000) and         (0.0000,-100.0000) ..
 (0.0000,-100.0000);       
\backslash
path[cm={{0.83468,0.55074,-0.55074,0.83468,(0.0,0.0)}},draw=black,line       
  width=0.800pt] (0.0000,100.0000) ..
 controls (-34.1440,100.0000) and         (-61.8232,55.2285) ..
 (-61.8232,0.0000) ..
 controls (-61.8232,-55.2285) and         (-34.1440,-100.0000) ..
 (-0.0000,-100.0000) ..
 controls (-0.0000,-100.0000)         and (0.0000,-100.0000) ..
 (0.0000,-100.0000);       
\backslash
path[cm={{0.12102,-0.99265,0.99265,0.12102,(0.0,0.0)}},draw=black,line       
  width=0.800pt] (0.0000,-100.0000) ..
 controls (45.1309,-100.0000) and         (81.7167,-55.2285) ..
 (81.7167,0.0000) ..
 controls (81.7167,55.2285) and         (45.1309,100.0000) ..
 (0.0000,100.0000);       
\backslash
path[cm={{0.89493,-0.44621,0.44621,0.89493,(0.0,0.0)}},draw=black,line       
  width=0.800pt] (0.0000,-100.0000) ..
 controls (29.6810,-100.0000) and         (53.7422,-55.2285) ..
 (53.7422,0.0000) ..
 controls (53.7422,55.2285) and         (29.6810,100.0000) ..
 (0.0000,100.0000);       
\backslash
path[draw=black,line width=0.800pt] (35.4206,93.5176) ..
 controls         (13.9375,101.6548) and (-13.9375,101.6548) ..
 (-35.4206,93.5176);       
\backslash
path[draw=black,line width=0.800pt] (79.2103,61.0391) ..
 controls         (59.8746,86.1317) and (8.7363,97.4824) ..
 (-35.0104,86.3917) ..
 controls         (-54.7325,81.3917) and (-70.4933,72.3515) ..
 (-79.2103,61.0391);       
\backslash
path[draw=black,line width=0.800pt] (97.7273,21.1987) ..
 controls         (91.0121,52.1570) and (41.8143,74.1312) ..
 (-12.1590,70.2795) ..
 controls         (-56.9087,67.0860) and (-92.1596,46.8665) ..
 (-97.7273,21.1987);       
\backslash
path[draw=black,line width=0.800pt] (97.7273,-21.1987) ..
 controls         (104.4425,9.7597) and (66.1323,37.9789) ..
 (12.1590,41.8306) ..
 controls         (-41.8143,45.6824) and (-91.0121,23.7082) ..
 (-97.7273,-7.2502) ..
 controls         (-98.7319,-11.8818) and (-98.7319,-16.5670) ..
 (-97.7273,-21.1987);       
\backslash
path[draw=black,line width=0.800pt] (79.2103,-61.0391) ..
 controls         (98.5460,-35.9466) and (78.7570,-6.6142) ..
 (35.0104,4.4765) ..
 controls         (-8.7363,15.5672) and (-59.8746,4.2165) ..
 (-79.2103,-20.8761) ..
 controls         (-89.0666,-33.6669) and (-89.0666,-48.2483) ..
 (-79.2103,-61.0391);       
\backslash
path[draw=black,line width=0.800pt] (35.4206,-93.5176) ..
 controls         (65.0446,-82.2969) and (73.2012,-59.4258) ..
 (53.6390,-42.4337) ..
 controls         (34.0768,-25.4416) and (-5.7965,-20.7630) ..
 (-35.4206,-31.9838) ..
 controls         (-65.0446,-43.2045) and (-73.2012,-66.0755) ..
 (-53.6390,-83.0676) ..
 controls         (-48.8580,-87.2205) and (-42.6607,-90.7752) ..
 (-35.4206,-93.5176);       
\backslash
path[draw=black,line width=0.800pt] (34.2020,-76.9751) ..
 controls         (34.2020,-66.1401) and (18.8893,-57.3566) ..
 (0.0000,-57.3566) ..
 controls         (-18.8893,-57.3566) and (-34.2020,-66.1401) ..
 (-34.2020,-76.9751) ..
 controls         (-34.2020,-87.8101) and (-18.8893,-96.5936) ..
 (0.0000,-96.5936) ..
 controls         (18.8893,-96.5936) and (34.2020,-87.8101) ..
 (34.2020,-76.9751) -- cycle;     
\backslash
path[draw=black,line width=0.800pt] (100.0000,0.0000) ..
 controls       (100.0000,55.2285) and (55.2285,100.0000) ..
 (0.0000,100.0000) ..
 controls       (-55.2285,100.0000) and (-100.0000,55.2285) ..
 (-100.0000,0.0000) ..
 controls       (-100.0000,-55.2285) and (-55.2285,-100.0000) ..
 (0.0000,-100.0000) ..
       controls (55.2285,-100.0000) and (100.0000,-55.2285) ..
 (100.0000,0.0000) --       cycle;   
\backslash
end{scope} 
\backslash
end{scope}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture} 
\end_layout

\begin_layout Plain Layout

	};       
\end_layout

\begin_layout Plain Layout

    % Draw edges     
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] ($(init.north west) + (-1.0,1.0)$) -| (init.north);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] ($(init.north) + (0.0,1.0)$) -| (two.north);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] ($(two.north) + (0.0,1.0)$) -| (three.north);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] (init.south) -- ($(init.south) + (0.0,-0.5)$) -| (four.south);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] (two.south) -- ($(two.south) + (0.0,-0.5)$) -| (four.south);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] (three.south) -- ($(three.south) + (0.0,-0.5)$) -| (four.south);
     
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] (four) -- (five);
\end_layout

\begin_layout Plain Layout

	
\backslash
path [line] (five) -- (six);
\end_layout

\begin_layout Plain Layout

    
\backslash
path [line] (six) |- ($(six.east) + (1.0,0.0)$) |- (seven.east);
\end_layout

\begin_layout Plain Layout

	
\backslash
path [line] (seven) -- (eight);
\end_layout

\begin_layout Plain Layout

	
\backslash
path [line] (eight) -- (nine);
\end_layout

\begin_layout Plain Layout

	
\backslash
path [line,dashed] (nine.north) -- (four.south);
\end_layout

\begin_layout Plain Layout

	
\backslash
path [line] (nine) -- (ten);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
